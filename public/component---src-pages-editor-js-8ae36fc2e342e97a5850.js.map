{"version":3,"sources":["webpack:///./src/pages/editor.js","webpack:///./gatsby-config.js"],"names":["StoryblokEntry","props","_this","_React$Component","call","this","state","story","componentDidMount","cb","sbConfigs","sbConfig","script","_this2","initStoryblokEvents","config","plugins","filter","item","resolve","length","document","createElement","type","src","options","accessToken","onload","getElementsByTagName","appendChild","loadStory","payload","_this3","window","storyblok","get","slug","storyId","version","data","setState","val","result","tmp","_this4","location","search","substr","split","forEach","decodeURIComponent","sb","on","id","content","addComments","pingEditor","inEditor","enterEditmode","render","react__WEBPACK_IMPORTED_MODULE_4___default","a","storyblok_react__WEBPACK_IMPORTED_MODULE_6___default","Components","component","React","key","_uid","blok","Component","module","exports","siteMetadata","title","homeSlug","name","path","__dirname"],"mappings":"sMAkCMA,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MACKC,MAAQ,CAACC,MAAO,MAFJL,sCAKnBM,kBAAA,WAAoB,IAnCeC,EAC/BC,EAGAC,EACAC,EA8BgBC,EAAAR,KAnCeI,EAoCb,WAAQI,EAAKC,uBAnC/BJ,EAAYK,IAAOC,QAAQC,OAAO,SAACC,GACrC,MAAwB,4BAAjBA,EAAKC,UAEVR,EAAWD,EAAUU,OAAS,EAAIV,EAAU,GAAK,IACjDE,EAASS,SAASC,cAAc,WAC7BC,KAAO,kBACdX,EAAOY,IAAP,+CAA4Db,EAASc,QAAQC,YAC7Ed,EAAOe,OAASlB,EAChBY,SAASO,qBAAqB,QAAQ,GAAGC,YAAYjB,MA8BrDkB,UAAA,SAAUC,GAAS,IAAAC,EAAA3B,KACjB4B,OAAOC,UAAUC,IAAI,CACnBC,KAAML,EAAQM,QACdC,QAAS,SACR,SAACC,GACFP,EAAKQ,SAAS,CAACjC,MAAOgC,EAAKhC,aAI/BO,oBAAA,WAAsB,IApCE2B,EACpBC,EACAC,EAkCkBC,EAAAvC,KACpBA,KAAKyB,UAAU,CAACO,SArCMI,EAqCY,OApChCC,EAAS,GACTC,EAAM,GAEVV,OAAOY,SAASC,OACbC,OAAO,GACPC,MAAM,KACNC,QAAQ,SAAU/B,IACjByB,EAAMzB,EAAK8B,MAAM,MACT,KAAOP,IACbC,EAASQ,mBAAmBP,EAAI,OAI/BD,KAyBL,IAAIS,EAAKlB,OAAOC,UAEhBiB,EAAGC,GAAG,CAAC,SAAU,aAAc,SAACrB,GAC9Ba,EAAKd,UAAUC,KAGjBoB,EAAGC,GAAG,QAAS,SAACrB,GACVa,EAAKtC,MAAMC,OAASwB,EAAQxB,MAAM8C,KAAOT,EAAKtC,MAAMC,MAAM8C,KAC5DtB,EAAQxB,MAAM+C,QAAUH,EAAGI,YAAYxB,EAAQxB,MAAM+C,QAASvB,EAAQxB,MAAM8C,IAC5ET,EAAKJ,SAAS,CAACjC,MAAOwB,EAAQxB,WAIlC4C,EAAGK,WAAW,WACRL,EAAGM,UACLN,EAAGO,qBAKTC,OAAA,WACE,GAAwB,MAApBtD,KAAKC,MAAMC,MACb,OAAQqD,EAAAC,EAAAvC,cAAA,YAGV,IAAIgC,EAAUjD,KAAKC,MAAMC,MAAM+C,QAE/B,OACEM,EAAAC,EAAAvC,cAACwC,EAAAD,EAAD,CAAYP,QAASA,GACrBM,EAAAC,EAAAvC,cAAA,WACGyC,IAAWT,EAAQU,WAAaC,IAAM3C,cAAcyC,IAAWT,EAAQU,WAAY,CAACE,IAAKZ,EAAQa,KAAMC,KAAMd,IAA7G,aAAsIA,EAAQU,UAA9I,yBApDoBC,IAAMI,WA2DpBrE,kCC7FfsE,cAAOC,QAAU,CACfC,aAAc,CACZC,MAAO,0BAETzD,QAAS,CACP,CACEG,QAAS,0BACTM,QAAS,CACPC,YAAa,2BACbgD,SAAU,OACVpC,QAAiD,cAGrD,6BACA,qBACA,CACEnB,QAAO,2BACPM,QAAS,CACPkD,KAAI,SACJC,KAASC,EAAL","file":"component---src-pages-editor-js-8ae36fc2e342e97a5850.js","sourcesContent":["import React from 'react'\nimport Components from '../components/components.js'\nimport SbEditable from 'storyblok-react'\nimport config from '../../gatsby-config'\n\nconst loadStoryblokBridge = function(cb) {\n  let sbConfigs = config.plugins.filter((item) => {\n    return item.resolve === 'gatsby-source-storyblok'\n  })\n  let sbConfig = sbConfigs.length > 0 ? sbConfigs[0] : {}\n  let script = document.createElement('script')\n  script.type = 'text/javascript'\n  script.src = `//app.storyblok.com/f/storyblok-latest.js?t=${sbConfig.options.accessToken}`\n  script.onload = cb\n  document.getElementsByTagName('head')[0].appendChild(script)\n}\n\nconst getParam = function(val) {\n  var result = ''\n  var tmp = []\n\n  window.location.search\n    .substr(1)\n    .split('&')\n    .forEach(function (item) {\n      tmp = item.split('=')\n      if (tmp[0] === val) {\n        result = decodeURIComponent(tmp[1])\n      }\n    })\n\n  return result\n}\n\nclass StoryblokEntry extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {story: null}\n  }\n\n  componentDidMount() {\n    loadStoryblokBridge(() => { this.initStoryblokEvents() })\n  }\n\n  loadStory(payload) {\n    window.storyblok.get({\n      slug: payload.storyId, \n      version: 'draft'\n    }, (data) => {\n      this.setState({story: data.story})\n    })\n  }\n\n  initStoryblokEvents() {\n    this.loadStory({storyId: getParam('path')})\n\n    let sb = window.storyblok\n\n    sb.on(['change', 'published'], (payload) => {\n      this.loadStory(payload)\n    })\n\n    sb.on('input', (payload) => {\n      if (this.state.story && payload.story.id === this.state.story.id) {\n        payload.story.content = sb.addComments(payload.story.content, payload.story.id)\n        this.setState({story: payload.story})\n      }\n    })\n\n    sb.pingEditor(() => {\n      if (sb.inEditor) {\n        sb.enterEditmode()\n      }\n    })\n  }\n\n  render() {\n    if (this.state.story == null) {\n      return (<div></div>)\n    }\n\n    let content = this.state.story.content\n\n    return (\n      <SbEditable content={content}>\n      <div>\n        {Components[content.component] ? React.createElement(Components[content.component], {key: content._uid, blok: content}) : `Component ${content.component} not created yet`}\n      </div>\n      </SbEditable>\n    )\n  }\n}\n\nexport default StoryblokEntry","module.exports = {\n  siteMetadata: {\n    title: 'Gatsby Default Starter',\n  },\n  plugins: [\n    {\n      resolve: 'gatsby-source-storyblok',\n      options: {\n        accessToken: 'YsaJ73fHrmMvTdVFGhb3yQtt',\n        homeSlug: 'home',\n        version: process.env.NODE_ENV === 'production' ? 'published' : 'draft'\n      }\n    },\n    'gatsby-plugin-react-helmet',\n    'gatsby-plugin-sass',\n    {\n      resolve: `gatsby-source-filesystem`,\n      options: {\n        name: `images`,\n        path: `${__dirname}/src/images`,\n      },\n    }\n  ],\n}\n"],"sourceRoot":""}